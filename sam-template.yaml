AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AI Chatbot Lambda Function

Parameters:
  FunctionName:
    Type: String
  S3Bucket:
    Type: String
  S3ObjectKey:
    Type: String

Resources:
  ChatBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref FunctionName
      Runtime: nodejs18.x
      FunctionUrl:
        AuthType: NONE
        Cors:
          AllowHeaders:
            - Content-Type
            - X-Amz-Date
            - Authorization
          AllowOrigin: "'*'"
          AllowMethods: "'GET,POST'"
      Handler: index.handler
      CodeUri: .
      Description: AI chatbot function
      MemorySize: 256
      Timeout: 15
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          BUCKET_NAME: !Sub S3_BUCKET_NAME

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: execution-role-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub 'arn:aws:s3:::S3_BUCKET_NAME/S3_OBJECT_KEY'