name: Lambda CI/CD Pipeline
on:
  push:
    branches:
      - main
env:
  FUNCTION_NAME: 'ai-chatbot-${{ github.sha }}'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'
      - name: Check IAM Role
        run: |
          aws iam get-role --role-name LambdaExecutionRole > /dev/null || \
          echo "Error: LambdaExecutionRole does not exist"
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install Dependencies
        run: |
          npm ci
      - name: Build Lambda Package
        run: |
          npm run build
          ls dist/lambda/src
          mkdir deploy-package
          cp dist/lambda/src/index.js deploy-package/
          cd deploy-package
          cat index.js
          zip ../lambda-deployment.zip *
      - name: Test Lambda
        run: |
          npm test -- --passWithNoTests
        continue-on-error: false
      - name: Create Lambda Function
        run: |
          aws lambda create-function \
            --function-name "$FUNCTION_NAME" \
            --runtime nodejs18.x \
            --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/LambdaExecutionRole \
            --handler index.handler \
            --zip-file fileb://lambda-deployment.zip \
          || aws lambda update-function-code \
            --function-name "$FUNCTION_NAME" \
            --zip-file fileb://lambda-deployment.zip
          echo "Waiting for function to become active..."
          while [ "$(aws lambda get-function --function-name "$(escape "$FUNCTION_NAME")" --query 'Configuration.State')" != "\"Active\"" ]; do
            sleep 5
          done
      - name: Deploy to Lambda
        run: |
          aws lambda update-function-configuration \
            --function-name "$FUNCTION_NAME" \
            --environment Variables={BUCKET_NAME=codev-demo}
          while [ "$(aws lambda get-function-configuration --function_name "$(escape "$FUNCTION_NAME")" --query 'LastUpdateStatus')" != "\"Successful\"" ]; do
            sleep 5
          done
          aws lambda publish-version \
            --function-name "$FUNCTION_NAME"
      - name: Verify Deployment
        run: |
          aws lambda get-function-configuration \
            --function-name "$FUNCTION_NAME"
        continue-on-error: true